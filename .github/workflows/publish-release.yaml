name: Publish Release

on:
  workflow_dispatch:
    inputs:
      custom_version:
        description: 'Release version (keep empty to auto-calculate)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'
          cache: 'maven'
          server-id: central1
          server-username: MAVEN_CENTRAL_LOGIN
          server-password: MAVEN_CENTRAL_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Config GPG and GIT
        run : |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'doer.lib@gmail.com'
          git config --local user.signingkey 1ABF597AE60EFDA91C4DF5B46D5D25A27E5BC0BF
          echo "1ABF597AE60EFDA91C4DF5B46D5D25A27E5BC0BF:6:" | gpg --import-ownertrust

      - name: Calculate next versions
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [ -z "$CUSTOM_VERSION" ]; then
            RELEASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
          else
            RELEASE_VERSION=$CUSTOM_VERSION
          fi
          NEXT_SNAPSHOT_VERSION=$(echo $RELEASE_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')-SNAPSHOT
          echo "User requested version: $CUSTOM_VERSION"
          echo "Version in pom.xml: $CURRENT_VERSION"
          echo "Release version   : $RELEASE_VERSION"
          echo "Next snapshot     : $NEXT_SNAPSHOT_VERSION"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "NEXT_SNAPSHOT_VERSION=$NEXT_SNAPSHOT_VERSION" >> $GITHUB_ENV
        env:
          CUSTOM_VERSION: ${{ github.event.inputs.custom_version }}

      - name: Update version to release
        run: |
          echo "====== Updating version to $RELEASE_VERSION ======"
          mvn -B --color=always versions:set -DnewVersion=$RELEASE_VERSION
          mvn -B --color=always versions:commit

          echo "====== Commiting and tagging ======"
          git commit -S -am "Release $RELEASE_VERSION"
          git tag -s -m "Release $RELEASE_VERSION" "v$RELEASE_VERSION"
          
          echo "====== Pushing to repository ======"
          git push
          git push --tags

      - name: Publish to Apache Maven Central
        run: mvn -B --color=always clean deploy -Prelease
        env:
          MAVEN_CENTRAL_LOGIN: ${{ secrets.MAVEN_CENTRAL_LOGIN }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Update version to next snapshot
        run: |
          mvn -B --color=always versions:set -DnewVersion=$NEXT_SNAPSHOT_VERSION
          mvn -B --color=always versions:commit
          git commit -S -am "Snapshot $NEXT_SNAPSHOT_VERSION"
          git push
